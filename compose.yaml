services:
  frontend:
    build:
      context: ./DCManager-frontend
      dockerfile: ./Dockerfile
    container_name: frontend
    ports:
      - "5173:5173"
    networks:
      - my_network
    depends_on:
      - backend
      - db

  backend:
    build:
      context: ./DCmanager-backend
      dockerfile: ./Dockerfile
    container_name: backend
    ports:
      - "5000:5000"
    environment:
      DB_NAME: datacenter_management
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db
      DB_PORT: 5432
      PORT: 5000
    networks:
      - my_network
    depends_on:
      db:
        condition: service_healthy
        restart: true

  db:
    build:
      context: ./DCmanager-backend/db
      dockerfile: ./Dockerfile
    container_name: database
    environment:
      - POSTGRES_USER=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

volumes:
  postgres_data:

networks:
  my_network:
    driver: bridge
